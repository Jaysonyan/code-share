{"ast":null,"code":"var _jsxFileName = \"/Users/Jayson/Desktop/code-share/frontend/src/App.js\";\nimport React, { useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { Flex } from \"rebass\";\nimport Editor from \"./components/editor\";\nconst socket = io(\"http://localhost:4000\");\n\nconst App = () => {\n  useEffect(() => {\n    socket.emit(\"joinRoom\", \"room\");\n  });\n  socket.on(\"insert\", value => console.log(value));\n\n  const some = emit => {\n    socket.emit(\"insert\", emit);\n  };\n\n  return React.createElement(Flex, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Editor, {\n    emit: some,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Jayson/Desktop/code-share/frontend/src/App.js"],"names":["React","useEffect","io","Flex","Editor","socket","App","emit","on","value","console","log","some"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAD,CAAjB;;AAEA,MAAMI,GAAG,GAAG,MAAM;AAEhBL,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACE,IAAP,CAAY,UAAZ,EAAwB,MAAxB;AACD,GAFQ,CAAT;AAIAF,EAAAA,MAAM,CAACG,EAAP,CAAU,QAAV,EAAqBC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAA/B;;AACA,QAAMG,IAAI,GAAIL,IAAD,IAAU;AACrBF,IAAAA,MAAM,CAACE,IAAP,CAAY,QAAZ,EAAsBA,IAAtB;AACD,GAFD;;AAIA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEK,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAhBD;;AAkBA,eAAeN,GAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport io from \"socket.io-client\"\nimport { Flex } from \"rebass\"\nimport Editor from \"./components/editor\"\n\nconst socket = io(\"http://localhost:4000\")\n\nconst App = () => {\n\n  useEffect(() => {\n    socket.emit(\"joinRoom\", \"room\")\n  })\n\n  socket.on(\"insert\", (value) => console.log(value))\n  const some = (emit) => {\n    socket.emit(\"insert\", emit)\n  }\n\n  return (\n    <Flex>\n      <Editor emit={some}/>\n    </Flex>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}